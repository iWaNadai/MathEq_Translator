@import url('https://fonts.googleapis.com/css2?family=DotGothic16&family=Inconsolata:wght@300&family=Montserrat+Alternates:ital,wght@1,700&display=swap');

@mixin presets {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
    color: white;
}

@function getBaseColor($key-word) {
    @if $key-word == 'body' {
        @return #a0d568;
    }
    @if $key-word == 'utility' {
        @return #ffce54; 
    }
    @if $key-word == 'number' {
        @return #ac92eb;
    }
    @if $key-word == 'operator' {
        @return #4fc1e8;
    }
    @if $key-word == 'grouper' {
        @return #ed5564;
    }
}

@function getShadeColor($key-word) {
    @if $key-word == 'body' {
        @return #528567;
    }
    @if $key-word == 'utility' {
        @return #da911f;
    }
    @if $key-word == 'number' {
        @return #525ebb;
    }
    @if $key-word == 'operator' {
        @return #1e78b9;
    }
    @if $key-word == 'grouper' {
        @return #cd3c2a;
    }
}

@function getLightColor($key-word) {
    @if $key-word == 'body' {
        @return #c5d99a;
    }
    @if $key-word == 'utility' {
        @return #ffd77f;
    }
    @if $key-word == 'number' {
        @return #d7a8f6;
    }
    @if $key-word == 'operator' {
        @return #8ccdf4;
    }
    @if $key-word == 'grouper' {
        @return #f17c8a;
    }
}

@mixin colored($key-word, $isInverted : false) {
    background-color: getBaseColor($key-word);
    border-color: getLightColor($key-word) getShadeColor($key-word) getShadeColor($key-word) getLightColor($key-word);

    @if $isInverted {
        border-color: getShadeColor($key-word) getLightColor($key-word) getLightColor($key-word) getShadeColor($key-word);
    }
}

@mixin button($key-word, $square: false) {
    @if $square == true {
        aspect-ratio: 1;   
    }
    border-radius: 1rem;
    border: $button-bevel solid yellow;
    transition: border-color 500ms;
    transition: background-color 500ms;
    transition: color 500ms;
    color: black;
    font-size: 1rem;

    @include colored($key-word);

    &:active {
        background-color: getShadeColor($key-word);
        border-color: getBaseColor($key-word) getShadeColor($key-word) getShadeColor($key-word) getBaseColor($key-word);
    }

    i {
        color: inherit;
        font-size: 1.25rem;
    }
}

* {
    @include presets();
}

$body-bevel-outer: 1rem;
$body-bevel-inner-0: 1rem;
$body-bevel-inner-1: .75rem;
$button-bevel: .5rem;

$screen-color-0: #d3e4d3;
$screen-color-2:#606b58 ;
$screen-color-1: #181d1a ;

$hinge-color-0: #282828 ;
$hinge-color-1: #a9a9a9;

body {
    height: 125vh;
    display: grid;
    place-items: center;
    background-color: black;
    padding-block: 1rem;
    overflow-y: scroll;

    .container {
        width: Min(100%, 25rem);
        max-width: 25rem;
        max-height: 300rem;
        aspect-ratio: 9 / 16;
        border-radius: 2rem;
        display: grid;
        grid-template-rows: 4fr 5fr;
        gap: 1rem;
        margin-bottom: 20rem;
        scroll-behavior: smooth;

        div {
            border: $body-bevel-outer solid red;
            border-radius: 2rem;
            position: relative;
            padding: 1rem;

            //DESIGN

            &.screen-body::before,
            &.screen-body::after {
                content: '';
                height: 1rem;
                width: 9rem;
                position: absolute;
                background-color: $hinge-color-1;
                bottom: -2.75rem;
            }
            &.screen-body::before {
                left: 1rem;
            }
            &.screen-body::after {
                right: 1rem;
            }
            &.keypad-body::before,
            &.keypad-body::after {
                content: '';
                height: .5rem;
                width: 9rem;
                position: absolute;
                background-color: $hinge-color-0;
                top: -2.25rem;
            }
            &.keypad-body::before {
                left: 1rem;
            }
            &.keypad-body::after {
                right: 1rem;
            }
        }

        .screen-body {
            display: grid;
            grid-template-rows: 9fr 1fr;
            min-height: 372.15px;
            width: Min(100%, 25rem);
            max-width: 25rem;    
            @include colored('body');

            //LOGO TEXT
            h1 {
                font-size: 1rem;
                place-self: center;
                font-family: 'Montserrat Alternates', sans-serif;
                color: getShadeColor('body');
            }
        }

        .keypad-body {
            display: grid;
            width: Min(100%, 25rem);
            max-width: 25rem;    
            grid-template-rows: 1fr 6fr;
            gap: 1rem;
            min-height: 465.1875px;
            @include colored('body')
        }
    }
}

.screen {
    border: $body-bevel-inner-0 solid green;
    border-radius: 2rem;
    padding: .5rem 1rem .2rem 1rem;
    display: grid;
    grid-template-rows: 4fr 1fr;
    @include colored('body', true);
    background-color: $screen-color-1;
    
    .console {
        background-color: $screen-color-2;
        max-height: 10.25rem;
        border-radius: .5rem;
        color: $screen-color-1;
        overflow-y: scroll;
        overflow-x: hidden;
        scroll-behavior: smooth;
        
        .carousel {
            display: flex;
            align-items: start;
            flex-direction: row;
            width: 200%;
            

            .translation, .solution{
                flex: 1 1 100%;
                padding: .3rem .5rem;
                width: 100%;
                text-align: left;
                background-color: transparent;
                color: $screen-color-1;
                font-size: 1rem;
                word-wrap: break-word;
                font-family: 'DotGothic16', monospace;  
                overflow: hidden;
            }

            #solution {
                display: flex;
                flex-direction: column;
                
                .solution-entry {
                    text-align: left;
                    background-color: transparent;
                    color: $screen-color-1;
                    font-size: 1rem;
                    word-wrap: break-word;
                    font-family: 'DotGothic16', monospace; 
                    font-style: none;

                    span {
                        background-color: $screen-color-1;
                        color: $screen-color-2;
                        font-family: 'DotGothic16', monospace; 
                        font-style: none;
                    }
                }
            }
        }
    }

    .screen-buttons {
        display: grid;
        grid-template-columns: 2rem 2rem 2rem;
        place-self: center;
        gap: 1rem;

        button {
            aspect-ratio: 1;
            border: none;
            background-color: transparent;
            transition: visibility 500ms;

            &:active {        
                i {
                    color: $screen-color-1;
                }
            }
    
            i {
                font-size: 1.3rem;
                color: $screen-color-2;
                transition: color 500ms;
            }
        }
    }
}

.output {
    display: flex;
    gap: .75rem;
    max-width: Min(100%, 320px);

    #equation {
        flex: 0 0 15rem;
        max-width: 15rem;
        border: $body-bevel-inner-1 solid green;
        height: 5rem;
        border-radius: .7rem;
        color: $screen-color-1;
        @include colored('body', true);
        background-color: $screen-color-2;
        padding: .1rem;
        max-lines: 1;
        overflow-x: scroll;
        gap: .25rem;
        padding-inline: .5rem;
        scroll-behavior: smooth;
        white-space: nowrap;

        var {
            font-family: 'DotGothic16', sans-serif;            font-style: normal;
            color: $screen-color-1;
            line-height: 3rem;
            font-size: 2rem;
        }
    }
    
    button {
        @include button('utility', true);
        flex: 0 0 auto;
        margin-block: .75rem;
    }
}

.input {
    display: grid;
    width: 320px;
    max-width: 320px;
    grid-template-columns: repeat(4, 1fr);
    place-items: center;
    gap: .5rem;

    button {
        width: 100%;
        height: 100%;
    }
    
    button.utility {
        @include button('utility', false);
    }

    button.number {
        @include button('number', false)
    }

    button.operator {
        @include button('operator', false)
    }

    button.grouper {
        @include button('grouper', false)
    }

    //LAYOUT
    [data-value="7"] {
        order: 1;
    }
    [data-value="8"] {
        order: 2;
    }
    [data-value="9"] {
        order: 3;
    }
    [data-value="+"] {
        order: 4;
    }
    [data-value="4"] {
        order: 5;
    }
    [data-value="5"] {
        order: 6;
    }
    [data-value="6"] {
        order: 7;
    }
    [data-value="-"] {
        order: 8;
    }
    [data-value="1"] {
        order: 9;
    }
    [data-value="2"] {
        order: 10;
    }
    [data-value="3"] {
        order: 11;
    }
    [data-value="*"] {
        order: 12;
    }
    [data-value="DEL"] {
        order: 13;
    }
    [data-value="0"] {
        order: 14;
    }
    [data-value="AC"] {
        order: 15;
    }
    [data-value="÷"] {
        order: 16;
    }
    [data-value="("] {
        order: 17;
    }
    [data-value="="] {
        order: 18;
    }
    [data-value=")"] {
        order: 19;
    }
    [data-value="."] {
        order: 20;
    }
    [data-value="^"] {
        order: 21;
    }
    [data-value="√"] {
        order: 22;
    }
    [data-value="SIGN"] {
        order: 23;
    }
    [data-value="/"] {
        order: 24;
    }
}